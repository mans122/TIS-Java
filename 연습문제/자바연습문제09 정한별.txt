1. 매출현황 막대그래프 완성하기

1/4분기 150
2/4분기 200
3/4분기 250
4/4분기 320

*백분율을 구해서 백분율*5 


2. 분기별 매출현황 꺾은선 그래프 그리기
=> x축, y축 포함

3. 분기별 매출현황 파이차트 그리기import javax.swing.*;
import java.awt.*;
public class Practice01 extends JFrame {
	private MyPanel panel = new MyPanel();
	
	public Practice01() {
		setTitle("paintComponent()예제");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setContentPane(panel);
		setSize(1000,800);
		setVisible(true);
	}
	
	class MyPanel extends JPanel{
		public void paintComponent(Graphics g) {
			super.paintComponent(g);
			//1번문제 막대그래프 그리기
			g.setFont(new Font("Jokerman",Font.ITALIC,15));
			g.drawString("분기별 매출현황 막대그래프", 80, 35);
			g.setColor(Color.BLUE);
			g.drawString("1/4분기", 10, 65);
			g.fillRect(70, 50, 150, 20);
			g.setColor(Color.RED);
			g.drawString("2/4분기", 10, 95);
			g.fillRect(70, 80, 200, 20);
			g.setColor(Color.BLACK);
			g.drawString("3/4분기", 10, 125);
			g.fillRect(70, 110, 250, 20);
			g.setColor(Color.MAGENTA);
			g.drawString("4/4분기", 10, 155);
			g.fillRect(70, 140, 320, 20);
			
			//2번 분기별 매출현황 꺾은선 그래프
			g.drawString("분기별 매출현황 꺾은선그래프", 80, 250);
			int width=50;
			g.setColor(Color.BLUE);
			g.drawString("1/4분기", 50, 610);
			g.drawLine(50, 600, 50+width, 600-150);
			g.drawString("2/4분기", 100, 460);
			g.drawLine(50+width, 450, 50+width*2, 600-200);
			g.drawString("3/4분기", 150, 410);
			g.drawLine(50+width*2, 400, 50+width*3, 600-250);
			g.drawString("4/4분기", 200, 360);
			g.drawLine(50+width*3, 350, 50+width*4, 600-320);
			
			//3번 분기별 매출현황 파이차트 그리기
			g.drawString("분기별 매출현황 파이차트", 570, 120);
			g.setColor(Color.BLUE);
			g.fillArc(550, 150, 200, 200, 0, 58);
			g.setColor(Color.RED);
			g.fillArc(550, 150, 200, 200, 58, 78);
			g.setColor(Color.BLACK);
			g.fillArc(550, 150, 200, 200,136, 125);
			g.setColor(Color.MAGENTA);
			g.fillArc(550, 150, 200,200,261,99);
		}
	}
	public static void main(String[] args) {
		new Practice01(); 
	}

}


=> 백분율 활용. 360도==100%


4. 매출현황 입력폼을 작성해서 등록 버튼을 누르면
3번 형태의 파이차트가 출력되게 하시오.
P681참고
package Practice4;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
public class Practice04 {
	JFrame f = new JFrame("연습문제09-4");
	JPanel p1 = new JPanel();
	//public CenterPanel cp = new CenterPanel();
	public static CenterPanel cp = new CenterPanel();
	public NorthPanel np= new NorthPanel();
	public static JLabel[] bk = new JLabel[4];
	public static JTextField[] tf_num = new JTextField[4];
	public static Integer[] bk_num = new Integer[4];
	public static int sum =0;
	public static int[] bkp = {0,0,0,0};
	//360도에서 모자란 만큼 4/4분기에 모자란만큼 더해주기 위해 값을 따로 구함 
	public static int gap = 0;

	public Practice04() {
		f.setTitle("연습문제9-4");
		f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // 프레임의 x버튼을 활성화하여 닫기버튼이 실행가능해짐
		f.add(p1); // 프레임 f에 판넬p1을 추가한다.
		p1.setLayout(new BorderLayout()); // 판넬의 레이아웃을 BorderLayout으로 지정
		np.setLayout(new FlowLayout());
		p1.add(cp,BorderLayout.CENTER); //Center에 cp패널 올림
		p1.add(np,BorderLayout.NORTH);
		f.setSize(560, 500); // 프레임 사이즈 지정
		f.setVisible(true); // 프레임을 보이게 함
	}	
	//BorderLayout.NORTH 패널 생성 및 들어갈 내용 작성
	class NorthPanel extends JPanel{
		JButton input = new JButton("입력");
		public NorthPanel() {
			//라벨,텍스트필드 생성
			for(int i=0;i<4;i++) {
				bk[i] = new JLabel((i+1)+"/4분기");
				tf_num[i] = new JTextField(5);
			}
			//ActionListener 생성 후 input패널 등록
			MyActionListener ma = new MyActionListener();
			input.addActionListener(ma);
			
			
			//패널에 bk,tf_num 등록
			this.setBackground(Color.LIGHT_GRAY);
			for(int i=0;i<4;i++) {
				this.add(bk[i]);
				this.add(tf_num[i]);
			}
			this.add(input);
		}
	}

	static class CenterPanel extends JPanel{
		public void paintComponent(Graphics g) {
			super.paintComponent(g);
			System.out.println(sum);
			g.setFont(new Font("Gothic",Font.ITALIC,15));
			g.drawString("분기별 매출현황 파이차트", 570, 120);
			g.setColor(Color.BLUE);
			g.drawString("1/4분기", 480, 150);
			g.fillRect(450, 140, 20, 10);
			g.fillArc(100, 50, 300, 300, 0, bkp[0]);
			
			g.setColor(Color.RED);
			g.drawString("2/4분기", 480, 170);
			g.fillRect(450, 160, 20, 10);
			g.fillArc(100, 50, 300, 300, bkp[0],bkp[1]);
			
			g.setColor(Color.BLACK);
			g.drawString("3/4분기", 480, 190);
			g.fillRect(450, 180, 20, 10);
			g.fillArc(100, 50, 300, 300, bkp[0]+ bkp[1],bkp[2]);
			
			g.setColor(Color.MAGENTA);
			g.drawString("4/4분기", 480, 210);
			g.fillRect(450, 200, 20, 10);
			g.fillArc(100, 50, 300, 300, bkp[0]+ bkp[1]+ bkp[2],bkp[3]+gap);
		}
	}
	//MyActionListener 클래스를 외부클래스로 빼버림
	/*
	class MyActionListener implements ActionListener{
		@Override
		public void actionPerformed(ActionEvent e) {
			for(int i=0;i<4;i++) {
				bk_num[i] = Integer.parseInt(tf_num[i].getText());
				sum+=bk_num[i];
			}
			for(int i=0;i<4;i++) {
				bkp[i] = (360*bk_num[i])/sum;
				bkp[i] = Math.round(bkp[i]);
				gap += bkp[i];
				System.out.println(bkp[i]);
			}
			gap = 360-gap;
			System.out.println("gap :" + gap);
			cp.repaint();
		}
	}
*/
	public static void main(String args[]) {
		new Practice04();
	}
}


5. Gallery프로그램에 메뉴 활용하기.예제14-2 참고
Picture 메뉴
- Cherry
- Apple
- banana

각 메뉴아이템에 해당하는 이미지 출력하기

package Practice05;
import java.awt.event.*;
import java.io.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;
class ImgFolder {
	public static ArrayList<String> fileName = new ArrayList<>();
	public static int fileNum;
	public static String url;
	public static String[] str;
	//img폴더에서 경로를 fileName에,파일 개수를 fileNum에 입력
	public static void listDirectory(File dir) {
		File[] subFiles = dir.listFiles();
		for(int i=0;i<subFiles.length;i++) {
			File f = subFiles[i];
			fileName.add(i,f.getPath());
			System.out.println(fileName.get(i));
		}
		fileNum = fileName.size();
		System.out.println(fileNum);
	}
	public ImgFolder() {}
}


public class Self extends JFrame{
	private int index =0;
	private JButton btnLeft;
	private JButton btnRight;
	public ImageIcon[] image;
	public static JLabel imageLabel = new JLabel();
	//public static ImageIcon[] fruitImage = new ImageIcon[4];
	public Self() {
		File f1 = new File("c:/myPhoto");//원하는 폴더안의 파일을 가져오기위한 폴더 경로 설정
		ImgFolder.listDirectory(f1);	//ImgFolder 클래스의 listDirectory 메소드로 매개변수 f1을 넣어줌	
		image = new ImageIcon[ImgFolder.fileNum];//이미지 배열 개수는 ImgFolder클래스에서 구한 fileNum값을 넣어준다.
		
		setTitle("연습문제 09 5번문제");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		Container c = getContentPane();
		c.setLayout(new FlowLayout(FlowLayout.CENTER,0,30));
		createMenu();//메뉴 만드는 메소드 호출
		//image[]에 사진을 넣는 반복문. 경로는 ImgFolder클래스에서 fileName을 받아온다.
		for(int i=0;i<ImgFolder.fileNum;i++) {
			image[i] = new ImageIcon(ImgFolder.fileName.get(i));
		}
		imageLabel.setIcon(image[0]);//이미지 자리에 맨처음 index 0번 image 올려둔다.
		JPanel imgPanel = new JPanel();
		imgPanel.setLayout(new FlowLayout(FlowLayout.CENTER,0,15));
		imgPanel.setBackground(Color.WHITE);
		imgPanel.setPreferredSize(new Dimension(550,550));
		c.add(imgPanel);
		imgPanel.add(imageLabel);
		
		JPanel iconPanel = new JPanel();
		iconPanel.setLayout(new FlowLayout(FlowLayout.CENTER,0,30));
		iconPanel.setBackground(Color.GREEN);
		iconPanel.setPreferredSize(new Dimension(550,200));
		c.add(iconPanel);
		//좌우 화살표 이미지 설정
		ImageIcon previous = new ImageIcon("img/previous.png");
		ImageIcon next = new ImageIcon("img/next.png");
		this.btnLeft = new JButton(previous);
		this.btnRight = new JButton(next);
		//iconPanel에 좌우 버튼 등록
		iconPanel.add(btnLeft);
		iconPanel.add(btnRight);
		//좌우버튼 ActionListener에 등록
		btnLeft.addActionListener(new MyItemListener());
		btnRight.addActionListener(new MyItemListener());
		
		setSize(550,850);
		setVisible(true);
	}

	private void createMenu() {
		JMenuBar mb = new JMenuBar();
		JMenuItem[] menuItem = new JMenuItem[4];
		String[] itemTitle = {"apple","banana","kiwi","mango"};
		JMenu screenMenu = new JMenu("File");
		
		MenuActionListener listener = new MenuActionListener();
		for(int i=0;i<menuItem.length;i++) {
			menuItem[i] = new JMenuItem(itemTitle[i]);
			menuItem[i].addActionListener(listener);
			screenMenu.add(menuItem[i]);
		}
		mb.add(screenMenu);
		setJMenuBar(mb);
	}
	
	//액션리스너 상속받는 클래스  생성
	class MyItemListener implements ActionListener{
		public void actionPerformed(ActionEvent e) {
			if(e.getSource() == btnLeft) {
				index --;
				if(index >= 0) {
					imageLabel.setIcon(image[index]);
				}
				else {
					index = image.length-1;
					imageLabel.setIcon(image[index]);	
				}
			}
			else {
				index ++;
				if(index <= image.length-1) {
					imageLabel.setIcon(image[index]);
				}
				else {
					index = 0;
					imageLabel.setIcon(image[index]);	
				}

			}
		}
	}
	public static void main(String[] args) {
		new Self();
	}

}
 
//메뉴 고를시 처리하는 이벤트 외부클래스로 작성
package Practice05;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ImageIcon;
import javax.swing.JFrame;

public class MenuActionListener implements ActionListener{
	public void actionPerformed(ActionEvent e) {
		String cmd = e.getActionCommand();
		switch(cmd) {
		case "apple":
		Self.imageLabel.setIcon(new ImageIcon("img2/apple.jpg"));
			break;
		case "banana":
			System.out.println("바나나");
			Self.imageLabel.setIcon(new ImageIcon("img2/banana.jpg"));
			break;
		case "kiwi":
			Self.imageLabel.setIcon(new ImageIcon("img2/kiwi.jpg"));
			break;
		case "mango":
			Self.imageLabel.setIcon(new ImageIcon("img2/mango.jpg"));
			break;
		}
	}
	
}
